name: Release

on:
  workflow_call:
    inputs:
      type:
        type: string
        required: false
        default: 'pre-release'
      path:
        type: string
        required: true

jobs:
  app:
    name: Parse app.yaml
    uses: ./.github/workflows/parse-app-yaml.yaml
    with:
      path: ${{ inputs.path }}

  next-version:
    name: Get next version
    needs: app
    uses: ./.github/workflows/next-version.yaml
    with:
      type: ${{ inputs.type }}
      version: ${{ needs.app.outputs.version }}

  commit-and-tag:
    name: Commit and tag
    needs: [ app, next-version ]
    uses: ./.github/workflows/commit-and-tag.yaml
    with:
      app-name: ${{ needs.app.outputs.name }}
      app-version: ${{ needs.next-version.outputs.version }}
      path: ${{ inputs.path }}

  build-and-push:
    strategy:
      matrix:
        profile: [ 'dev', 'qa', 'prod' ]
        build-prod:
          - ${{ inputs.type == 'patch' || inputs.type == 'minor' || inputs.type == 'major' }}
        exclude:
          - profile: 'prod'
            build-prod: false
    name: Build and push
    environment: ${{ matrix.profile }}
    needs: [ app, next-version, commit-and-tag ]
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ needs.app.outputs.name }}
      APP_VERSION: ${{ needs.next-version.outputs.version }}
    steps:
      - uses: earthly/actions-setup@v1
        with:
          version: v0.7.8
      - uses: actions/checkout@v4
        with:
          ref: refs/tags/${{ env.APP_NAME }}-v${{ env.APP_VERSION }}
      - name: Build Docker image
        run: earthly ${{ inputs.path }}/+docker --name=${{ env.APP_NAME }} --version=${{ env.APP_VERSION }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag ${{ env.APP_NAME }}:${{ env.APP_VERSION }} ${{ env.REGISTRY }}/${{ env.APP_NAME }}-${{ matrix.profile }}:${{ env.APP_VERSION }}
          docker push ${{ env.REGISTRY }}/${{ env.APP_NAME }}-${{ matrix.profile }}:${{ env.APP_VERSION }}
